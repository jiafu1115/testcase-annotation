We can use @testcase to write test case for java methods and generate them to one excel.

= Requirements =

1.maven project

= How to use it =

==step 1: configure pom.xml==

add followed two configure parts:dependency and plugin into pom.xml:

{{{
<dependency>
    <groupid>com.googlecode.testcase-annotation</groupid>
    <artifactid>testcase-annotation</artifactid>
    <version>1.0.2</version>
</dependency>
}}}

{{{
<plugin>
    <groupId>org.codehaus.mojo</groupId>
    <artifactId>apt-maven-plugin</artifactId>
    <version>1.0-alpha-5</version>
    <configuration>				         <factory>com.googlecode.testcase.annotation.AnnotationProcessFactoryImpl</factory>    </configuration>
</plugin>
}}}

==step 2: use `@TestCase` in your code ==

{{{
public class YourTestCase {


	@TestCase(
			module="case module",
			id = 3,
		 	title = "case title",
		 	preConditions={"condition"},
			steps = {
				"case step one",
				"case step two"
				},
			results = {
				"case result one",
				"case result two"
				  }
 			)
	@Test
	public void YourTestMethod() {

 	}
	
}
}}}

==step 3: generate excel: execute mvn apt:process or mvn apt:test-process ==

execute: *mvn apt:process* or *apt:test-process*

the goals can refer to :http://mojo.codehaus.org/apt-maven-plugin/plugin-info.html

output excel's dir: it is decided to outputDirectory configure by default: http://mojo.codehaus.org/apt-maven-plugin/process-mojo.html#outputDirectory

for apt:process, the output dir is *target\generated-resources\apt*

for apt:test-process, the output dir is *target\generated-test-sources\apt*

http://ww2.sinaimg.cn/large/7d9d794bgw1e7an3tz2saj20ue060gmi.jpg

= More use examples=

==Use 1: How to generate office 03xls excel file instend of 07xlsx's?==

add option: *excelType=xls*
{{{
<configuration>
<factory>
com.googlecode.testcase.annotation.AnnotationProcessFactoryImpl?
</factory>
<options>
<option>excelType=xls</option>
</options>
</configuration>
}}}

==Use 2: How to change the excel's name?==

the excel file's name is TestCase_Date format. if you want to change it, you can:

add option: *excelType=xls*
{{{
<configuration>
<factory>
com.googlecode.testcase.annotation.AnnotationProcessFactoryImpl?
</factory>
<options>
<option>fileName=customizedName.xlsx</option>
</options>
</configuration>
}}}

==Use 2: How to change the excel's output dir?==

add configure:outputdirectory:
{{{
<configuration>
<factory>
com.googlecode.testcase.annotation.AnnotationProcessFactoryImpl?
</factory>
<outputdirectory>
C:\aptDir
</outputdirectory>
</configuration>
}}}

 